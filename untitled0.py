# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UpkEglEjQgo_p8th7CV3zySWtRHe_hMI

Task 1: Create and Modify Lists
"""

fruits = ["apple", "banana", "orange"]
fruits.append("grape")
fruits.insert(2, "mango")
fruits.remove("banana")
print("Final fruits list:", fruits)

"""Task 2: List Operations"""

numbers = [10, 20, 30, 40, 50]
more_numbers = [60, 70, 80]
all_numbers = numbers + more_numbers
numbers_copy = all_numbers.copy()
numbers_copy.reverse()
print("All numbers:", all_numbers)
print("Reversed copy:", numbers_copy)

"""Task 3: Sorting and Counting"""

scores = [85, 92, 78, 65, 92, 85, 74]
scores.sort()
print("Sorted (ascending):", scores)
scores.sort(reverse=True)
print("Sorted (descending):", scores)
print("92 appears:", scores.count(92), "times")
print("Highest score:", max(scores))
print("Lowest score:", min(scores))

"""Task 4: List Manipulation"""

letters = ["a", "b", "c", "d", "e"]
first_three = letters[:3]
last_two = letters[-2:]
index_c = letters.index("c")
letters[letters.index("d")] = "z"
print("First three letters:", first_three)
print("Last two letters:", last_two)
print("Index of 'c':", index_c)
print("Modified letters:", letters)

"""Task 1: Create and Access Dictionaries"""

student = {
    "name": "TAHA BENGALI",
    "age": 22,
    "grade": "A",
    "courses": ["Math", "Science", "History"]
}
print("Student's name:", student["name"])
print("Courses:", student["courses"])
student["email"] = "john@example.com"
print("Full student dictionary:", student)

"""Task 2: Modify Dictionary Values"""

student["age"] = 21
student["courses"].append("Computer Science")
student["grade"] = "A+"
print("Updated student dictionary:", student)

"""Task 3: Dictionary Operations"""

student_address = {
    "street": "123 College Ave",
    "city": "New York",
    "zip": "10001"
}
student_info = {**student, **student_address}
student_info.pop("zip")
print("Phone exists?", "phone" in student_info)
print("Final student info:", student_info)

"""Task 4: Dictionary Methods"""

word_count = {
    "hello": 5,
    "world": 10,
    "python": 15
}
print("Keys:", list(word_count.keys()))
print("Values:", list(word_count.values()))
print("Items:", list(word_count.items()))
word_count_copy = word_count.copy()
word_count.clear()
print("Cleared original dictionary:", word_count)
print("Copied dictionary:", word_count_copy)

"""Shopping Discount Calculator"""

purchase_amount = 120
is_loyalty_member = True
day_of_week = "Saturday"
is_holiday_season = True

discount = 0
print("\nOriginal Purchase Amount: $", purchase_amount)

# Rule 1: Purchase amount discounts
if purchase_amount > 100:
    discount += 0.10
    print("10% discount applied")
elif purchase_amount > 50:
    discount += 0.05
    print("5% discount applied")

# Rule 2: Loyalty
if is_loyalty_member:
    discount += 0.05
    print("Loyalty discount (5%) applied")

# Rule 3: Weekend
if day_of_week in ["Saturday", "Sunday"]:
    discount += 0.02
    print("Weekend discount (2%) applied")

# Rule 4: Holiday
if is_holiday_season:
    discount += 0.08
    print("Holiday discount (8%) applied")

discount_amount = purchase_amount * discount
final_price = purchase_amount - discount_amount
print("Total discount: $", round(discount_amount, 2))
print("Final price: $", round(final_price, 2))

"""For Loop - Number Patterns"""

print("\nPattern 1: ", end="")
for i in range(1, 11):
    print(i, end=" ")
print()

# Pattern 2: Multiplication Table of 5
print("Pattern 2: Multiplication Table of 5")
for i in range(1, 11):
    print(f"5 x {i} = {5 * i}")

"""While Loop - Guessing Game"""

secret_number = 23
guess = None
attempts = 0

print("\nGuess the number between 1 and 50!")
while guess != secret_number:
    guess = int(input("Enter your guess: "))
    attempts += 1
    if guess < secret_number:
        print("Too low!")
    elif guess > secret_number:
        print("Too high!")
    else:
        print(f"Correct! You guessed it in {attempts} attempts.")

"""Student Grade Management System"""

students = [
    {
        "name": "Alice",
        "id": 101,
        "grades": {"Math": 90, "Science": 85, "English": 88}
    },
    {
        "name": "Bob",
        "id": 102,
        "grades": {"Math": 78, "Science": 82, "English": 80}
    },
    {
        "name": "Charlie",
        "id": 103,
        "grades": {"Math": 92, "Science": 88, "English": 94}
    }
]

# Display students and calculate averages
print("\nStudent Grades:")
top_student = None
highest_avg = 0
for student in students:
    name = student["name"]
    grades = student["grades"]
    avg = sum(grades.values()) / len(grades)
    print(f"{name} - Grades: {grades}, Average: {avg:.2f}")
    if avg > highest_avg:
        highest_avg = avg
        top_student = student

# Top student
print(f"\nTop student: {top_student['name']} with average {highest_avg:.2f}")

# Students with average above 80
print("Students with average > 80:")
for student in students:
    avg = sum(student["grades"].values()) / len(student["grades"])
    if avg > 80:
        print(student["name"])

# Average grade for a specific course (e.g., Math)
course_name = "Math"
total = count = 0
for student in students:
    if course_name in student["grades"]:
        total += student["grades"][course_name]
        count += 1
if count > 0:
    print(f"\nAverage grade in {course_name}: {total / count:.2f}")

# Add new student
new_student = {
    "name": "David",
    "id": 104,
    "grades": {"Math": 85, "Science": 80, "English": 82}
}
students.append(new_student)
print("\nNew student added:", new_student["name"])